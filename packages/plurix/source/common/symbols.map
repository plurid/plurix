MIR_COMMON_0.25 {
 global:
  extern "C++" {
# The following symbols come from running a script over the generated docs. Vis:
# ../tools/process_doxygen_xml.py doc/xml/*.xml | grep "^mircommon public" | sed "s/mircommon public: /    /" | sort  
    mir::detail::libname_impl*;
    mir::detail::RefCountedLibrary::operator*;
    mir::detail::RefCountedLibrary::?RefCountedLibrary*;
    mir::detail::RefCountedLibrary::RefCountedLibrary*;
    mir::dispatch::ActionQueue::ActionQueue*;
    mir::dispatch::ActionQueue::dispatch*;
    mir::dispatch::ActionQueue::enqueue*;
    mir::dispatch::ActionQueue::relevant_events*;
    mir::dispatch::ActionQueue::watch_fd*;
    mir::dispatch::Dispatchable::?Dispatchable*;
    mir::dispatch::Dispatchable::Dispatchable*;
    mir::dispatch::Dispatchable::operator*;
    mir::dispatch::MultiplexingDispatchable::add_watch*;
    mir::dispatch::MultiplexingDispatchable::dispatch*;
    mir::dispatch::MultiplexingDispatchable::?MultiplexingDispatchable*;
    mir::dispatch::MultiplexingDispatchable::MultiplexingDispatchable*;
    mir::dispatch::MultiplexingDispatchable::operator*;
    mir::dispatch::MultiplexingDispatchable::relevant_events*;
    mir::dispatch::MultiplexingDispatchable::remove_watch*;
    mir::dispatch::MultiplexingDispatchable::watch_fd*;
    mir::dispatch::ReadableFd::dispatch*;
    mir::dispatch::ReadableFd::ReadableFd*;
    mir::dispatch::ReadableFd::relevant_events*;
    mir::dispatch::ReadableFd::watch_fd*;
    mir::dispatch::ThreadedDispatcher::add_thread*;
    mir::dispatch::ThreadedDispatcher::remove_thread*;
    mir::dispatch::ThreadedDispatcher::?ThreadedDispatcher*;
    mir::dispatch::ThreadedDispatcher::ThreadedDispatcher*;
    mir::graphics::NativeBuffer::?NativeBuffer*;
    mir::graphics::NativeBuffer::NativeBuffer*;
    mir::graphics::NativeBuffer::operator*;
    mir::input::Keymap::Keymap*;
    mir::libraries_for_path*;
    mir::log*;
    mir::logging::DumbConsoleLogger::log*;
    mir::logging::log*;
    mir::logging::Logger::log*;
    mir::logging::Logger::?Logger*;
    mir::logging::Logger::Logger*;
    mir::logging::Logger::operator*;
    mir::logging::set_logger*;
    mir::logv*;
    mir::PosixRWMutex::lock*;
    mir::PosixRWMutex::lock_shared*;
    mir::PosixRWMutex::operator*;
    mir::PosixRWMutex::?PosixRWMutex*;
    mir::PosixRWMutex::PosixRWMutex*;
    mir::PosixRWMutex::try_lock*;
    mir::PosixRWMutex::try_lock_shared*;
    mir::PosixRWMutex::unlock*;
    mir::PosixRWMutex::unlock_shared*;
    mir::select_libraries_for_path*;
    mir::SharedLibrary::load_symbol*;
    mir::SharedLibraryProberReport::operator*;
    mir::SharedLibraryProberReport::?SharedLibraryProberReport*;
    mir::SharedLibraryProberReport::SharedLibraryProberReport*;
    mir::SharedLibrary::?SharedLibrary*;
    mir::SharedLibrary::SharedLibrary*;
    non-virtual?thunk?to?mir::dispatch::ActionQueue::dispatch*;
    non-virtual?thunk?to?mir::dispatch::ActionQueue::relevant_events*;
    non-virtual?thunk?to?mir::dispatch::ActionQueue::watch_fd*;
    non-virtual?thunk?to?mir::dispatch::Dispatchable::?Dispatchable*;
    non-virtual?thunk?to?mir::dispatch::MultiplexingDispatchable::dispatch*;
    non-virtual?thunk?to?mir::dispatch::MultiplexingDispatchable::?MultiplexingDispatchable*;
    non-virtual?thunk?to?mir::dispatch::MultiplexingDispatchable::relevant_events*;
    non-virtual?thunk?to?mir::dispatch::MultiplexingDispatchable::watch_fd*;
    non-virtual?thunk?to?mir::dispatch::ReadableFd::dispatch*;
    non-virtual?thunk?to?mir::dispatch::ReadableFd::relevant_events*;
    non-virtual?thunk?to?mir::dispatch::ReadableFd::watch_fd*;
    non-virtual?thunk?to?mir::graphics::NativeBuffer::?NativeBuffer*;
    non-virtual?thunk?to?mir::logging::DumbConsoleLogger::log*;
    non-virtual?thunk?to?mir::logging::Logger::log*;
    non-virtual?thunk?to?mir::logging::Logger::?Logger*;
    non-virtual?thunk?to?mir::SharedLibraryProberReport::?SharedLibraryProberReport*;
    typeinfo?for?mir::detail::RefCountedLibrary;
    typeinfo?for?mir::dispatch::ActionQueue;
    typeinfo?for?mir::dispatch::Dispatchable;
    typeinfo?for?mir::dispatch::MultiplexingDispatchable;
    typeinfo?for?mir::dispatch::ReadableFd;
    typeinfo?for?mir::dispatch::ThreadedDispatcher;
    typeinfo?for?mir::events::ContactState;
    typeinfo?for?mir::events::InputDeviceState;
    typeinfo?for?mir::graphics::NativeBuffer;
    typeinfo?for?mir::input::Keymap;
    typeinfo?for?mir::IntOwnedFd;
    typeinfo?for?mir::logging::DumbConsoleLogger;
    typeinfo?for?mir::logging::Logger;
    typeinfo?for?mir::logging::NullSharedLibraryProberReport;
    typeinfo?for?mir::PosixRWMutex;
    typeinfo?for?mir::SharedLibrary;
    typeinfo?for?mir::SharedLibraryProberReport;
    typeinfo?for?mir::time::PosixTimestamp;
    vtable?for?mir::detail::RefCountedLibrary;
    vtable?for?mir::dispatch::ActionQueue;
    vtable?for?mir::dispatch::Dispatchable;
    vtable?for?mir::dispatch::MultiplexingDispatchable;
    vtable?for?mir::dispatch::ReadableFd;
    vtable?for?mir::dispatch::ThreadedDispatcher;
    vtable?for?mir::events::ContactState;
    vtable?for?mir::events::InputDeviceState;
    vtable?for?mir::graphics::NativeBuffer;
    vtable?for?mir::input::Keymap;
    vtable?for?mir::IntOwnedFd;
    vtable?for?mir::logging::DumbConsoleLogger;
    vtable?for?mir::logging::Logger;
    vtable?for?mir::logging::NullSharedLibraryProberReport;
    vtable?for?mir::PosixRWMutex;
    vtable?for?mir::SharedLibrary;
    vtable?for?mir::SharedLibraryProberReport;
    vtable?for?mir::time::PosixTimestamp;

    # These symbols are supposed to be "private" (they're under src/include)
    # but they are used by libmirplatform, libmirclient or libmirserver
    mir::default_server_socket;
    mir::logging::input_timestamp*;
    mir::RecursiveReadLock::?RecursiveReadLock*;
    mir::RecursiveReadLock::RecursiveReadLock*;
    mir::RecursiveReadWriteMutex::read_lock*;
    mir::RecursiveReadWriteMutex::read_unlock*;
    mir::RecursiveReadWriteMutex::write_lock*;
    mir::RecursiveReadWriteMutex::write_unlock*;
    mir::report::lttng::TracepointProvider::?TracepointProvider*;
    mir::report::lttng::TracepointProvider::TracepointProvider*;
    mir::set_thread_name*;
    vtable?for?mir::time::SteadyClock;
    vtable?for?mir::time::Clock;

    mir::send_fds*;

    mir::fd_reception_error::fd_reception_error*;
    mir::receive_data*;
    mir::socket_error::socket_error*;
    mir::socket_error_is_transient*;
    mir::socket_disconnected_error*;
    typeinfo?for?mir::fd_reception_error;
    typeinfo?for?mir::socket_error;
    typeinfo?for?mir::socket_disconnected_error;

    mir::SignalBlocker::SignalBlocker*;
    mir::SignalBlocker::?SignalBlocker*;
    };
  local: *;
};

MIR_COMMON_0.27_PRIVATE {
 global:
  extern "C++" {
# New functions in Mir 0.19.0
      # These symbols are supposed to be "private" (they're under src/include)
      # but they are used by libmirplatform, libmirclient or libmirserver
      typeinfo?for?mir::time::SteadyClock;
      mir::detail::libname_impl*;

# New functions in Mir 0.22
      # These symbols are supposed to be "private" (they're under src/include)
      # but they are used by libmirplatform, libmirclient or libmirserver
       MirEvent::to_surface*;
# The above line matches these, but added to document why they disappeared
#       MirEvent::to_surface_output*;   *** removed in Mir 0.26 ***
#       MirEvent::to_surface_placement*;*** removed in Mir 0.26 ***
       MirEvent::to_resize*;
       MirEvent::to_orientation*;
#       MirEvent::to_close_surface*;    *** removed in Mir 0.26 ***
       MirEvent::to_keymap*;
       MirEvent::to_input*;
       MirEvent::to_prompt_session*;
       MirEvent::serialize*;
       MirEvent::deserialize*;
       MirEvent::clone*;
       MirEvent::type*;
       MirCloseSurfaceEvent::MirCloseSurfaceEvent*;
       MirCloseSurfaceEvent::surface_id*;
       MirCloseSurfaceEvent::set_surface_id*;
       MirSurfaceOutputEvent::MirSurfaceOutputEvent*;
       MirSurfaceOutputEvent::surface_id*;
       MirSurfaceOutputEvent::set_surface_id*;
       MirSurfaceOutputEvent::dpi*;
       MirSurfaceOutputEvent::set_dpi*;
       MirSurfaceOutputEvent::scale*;
       MirSurfaceOutputEvent::set_scale*;
       MirSurfaceOutputEvent::form_factor*;
       MirSurfaceOutputEvent::set_form_factor*;
       MirSurfaceOutputEvent::output_id*;
       MirSurfaceOutputEvent::set_output_id*;
       MirResizeEvent::MirResizeEvent*;
       MirResizeEvent::surface_id*;
       MirResizeEvent::set_surface_id*;
       MirResizeEvent::width*;
       MirResizeEvent::set_width*;
       MirResizeEvent::height*;
       MirResizeEvent::set_height*;
       MirSurfaceEvent::MirSurfaceEvent*;
       MirSurfaceEvent::id*;
       MirSurfaceEvent::set_id*;
       MirSurfaceEvent::attrib*;
       MirSurfaceEvent::set_attrib*;
       MirSurfaceEvent::value*;
       MirSurfaceEvent::set_value*;
       MirInputConfigurationEvent::MirInputConfigurationEvent*;
       MirInputConfigurationEvent::action*;
       MirInputConfigurationEvent::set_action*;
       MirInputConfigurationEvent::when*;
       MirInputConfigurationEvent::set_when*;
       MirInputConfigurationEvent::id*;
       MirInputConfigurationEvent::set_id*;
       MirInputEvent::cookie*;
       MirInputEvent::device_id*;
       MirInputEvent::event_time*;
       MirInputEvent::input_type*;
       MirInputEvent::modifiers*;
       MirInputEvent::set_cookie*;
       MirInputEvent::set_device_id*;
       MirInputEvent::set_event_time*;
       MirInputEvent::set_modifiers*;
       MirInputEvent::to_keyboard*;
       MirInputEvent::to_pointer*;
       MirInputEvent::to_touch*;
       MirKeyboardEvent::MirKeyboardEvent*;
       MirKeyboardEvent::device_id*;
       MirKeyboardEvent::set_device_id*;
       MirKeyboardEvent::source_id*;
       MirKeyboardEvent::set_source_id*;
       MirKeyboardEvent::action*;
       MirKeyboardEvent::set_action*;
       MirKeyboardEvent::modifiers*;
       MirKeyboardEvent::set_modifiers*;
       MirKeyboardEvent::key_code*;
       MirKeyboardEvent::set_key_code*;
       MirKeyboardEvent::scan_code*;
       MirKeyboardEvent::set_scan_code*;
       MirKeyboardEvent::event_time*;
       MirKeyboardEvent::set_event_time*;
       MirKeyboardEvent::cookie*;
       MirKeyboardEvent::set_cookie*;
       MirKeymapEvent::MirKeymapEvent*;
       MirKeymapEvent::surface_id*;
       MirKeymapEvent::set_surface_id*;
       MirKeymapEvent::device_id*;
       MirKeymapEvent::set_device_id*;
       MirKeymapEvent::buffer*;
       MirKeymapEvent::set_buffer*;
       MirKeymapEvent::free_buffer*;
       MirKeymapEvent::size*;
       MirKeymapEvent::set_size*;
       MirPointerEvent::MirPointerEvent*;
       MirPointerEvent::action*;
       MirPointerEvent::buttons*;
       MirPointerEvent::dx*;
       MirPointerEvent::dy*;
       MirPointerEvent::hscroll*;
       MirPointerEvent::set_action*;
       MirPointerEvent::set_buttons*;
       MirPointerEvent::set_dx*;
       MirPointerEvent::set_dy*;
       MirPointerEvent::set_hscroll*;
       MirPointerEvent::set_vscroll*;
       MirPointerEvent::set_x*;
       MirPointerEvent::set_y*;
       MirPointerEvent::vscroll*;
       MirPointerEvent::x*;
       MirPointerEvent::y*;
       MirTouchEvent::MirTouchEvent*;
       MirTouchEvent::pointer_count*;
       MirTouchEvent::set_pointer_count*;
       MirTouchEvent::id*;
       MirTouchEvent::set_id*;
       MirTouchEvent::x*;
       MirTouchEvent::set_x*;
       MirTouchEvent::y*;
       MirTouchEvent::set_y*;
       MirTouchEvent::touch_major*;
       MirTouchEvent::set_touch_major*;
       MirTouchEvent::touch_minor*;
       MirTouchEvent::set_touch_minor*;
       MirTouchEvent::pressure*;
       MirTouchEvent::set_pressure*;
       MirTouchEvent::orientation*;
       MirTouchEvent::set_orientation*;
       MirTouchEvent::tool_type*;
       MirTouchEvent::set_tool_type*;
       MirTouchEvent::action*;
       MirTouchEvent::set_action*;
       MirOrientationEvent::MirOrientationEvent*;
       MirOrientationEvent::surface_id*;
       MirOrientationEvent::set_surface_id*;
       MirOrientationEvent::direction*;
       MirOrientationEvent::set_direction*;
       MirPromptSessionEvent::MirPromptSessionEvent*;
       MirPromptSessionEvent::new_state*;
       MirPromptSessionEvent::set_new_state*;

# New functions in Mir 0.24
      # These symbols are supposed to be "private" (they're under src/include)
      # but they are used by libmirplatform, libmirclient or libmirserver
       MirEvent::to_input_device_state*;
       MirInputDeviceStateEvent::MirInputDeviceStateEvent*;
       MirInputDeviceStateEvent::device_count*;
       MirInputDeviceStateEvent::device_id*;
       MirInputDeviceStateEvent::device_pointer_buttons*;
       MirInputDeviceStateEvent::device_pressed_keys_count*;
       MirInputDeviceStateEvent::modifiers*;
       MirInputDeviceStateEvent::pointer_axis*;
       MirInputDeviceStateEvent::pointer_buttons*;
       MirInputDeviceStateEvent::set_modifiers*;
       MirInputDeviceStateEvent::set_pointer_axis*;
       MirInputDeviceStateEvent::set_pointer_buttons*;
       MirInputDeviceStateEvent::set_when*;
       MirInputDeviceStateEvent::when*;
       mir::time::SteadyClock::now*;
       mir::time::SteadyClock::min_wait_until*;
       mir::dispatch::epoll_to_fd_event*;
       mir::dispatch::fd_event_to_epoll*;

# New functions in Mir 0.25
      # These symbols are supposed to be "private" (they're under src/include)
      # but they are used by libmirplatform, libmirclient or libmirserver
      MirSurfacePlacementEvent::MirSurfacePlacementEvent*;
      MirSurfacePlacementEvent::id*;
      MirSurfacePlacementEvent::set_id*;
      MirSurfacePlacementEvent::placement*;
      MirSurfacePlacementEvent::set_placement*;
      MirInputDeviceStateEvent::device_pressed_keys_for_index*;
      MirInputDeviceStateEvent::set_device_states*;
      MirEvent::MirEvent*;
      MirEvent::operator*;
      MirInputEvent::operator*;
      mir::output_type_name*;
      MirSurfaceOutputEvent::refresh_rate*;
      MirSurfaceOutputEvent::set_refresh_rate*;
      mir::output_type_name*;
      mir::PosixRWMutex::PosixRWMutex*;
      mir::PosixRWMutex::?PosixRWMutex*;
      mir::PosixRWMutex::lock*;
      mir::PosixRWMutex::try_lock*;
      mir::PosixRWMutex::unlock*;
      mir::PosixRWMutex::shared_lock*;
      mir::PosixRWMutex::try_shared_lock*;
      mir::PosixRWMutex::unlock_shared*;
    };
} MIR_COMMON_0.25;

MIR_COMMON_0.26 {
 global:
  extern "C++" {
      mir::graphics::Edid::*;
      MirInputDevice::?MirInputDevice*;
      MirInputDevice::MirInputDevice*;
      MirInputDevice::capabilities*;
      MirInputDevice::has_keyboard_config*;
      MirInputDevice::has_pointer_config*;
      MirInputDevice::has_touchpad_config*;
      MirInputDevice::has_touchscreen_config*;
      MirInputDevice::id*;
      MirInputDevice::keyboard_config*;
      MirInputDevice::name*;
      MirInputDevice::operator*;
      MirInputDevice::pointer_config*;
      MirInputDevice::set_keyboard_config*;
      MirInputDevice::set_pointer_config*;
      MirInputDevice::set_touchpad_config*;
      MirInputDevice::set_touchscreen_config*;
      MirInputDevice::touchpad_config*;
      MirInputDevice::touchscreen_config*;
      MirInputDevice::unique_id*;
      MirInputConfig::?MirInputConfig*;
      MirInputConfig::MirInputConfig*;
      MirInputConfig::add_device_config*;
      MirInputConfig::for_each*;
      MirInputConfig::get_device_config_by_id*;
      MirInputConfig::get_device_config_by_index*;
      MirInputConfig::operator*;
      MirInputConfig::remove_device_by_id*;
      MirInputConfig::size*;
      MirKeyboardConfig::?MirKeyboardConfig*;
      MirKeyboardConfig::MirKeyboardConfig*;
      MirKeyboardConfig::device_keymap*;
      MirKeyboardConfig::operator*;
      MirPointerConfig::?MirPointerConfig*;
      MirPointerConfig::MirPointerConfig*;
      MirPointerConfig::acceleration*;
      MirPointerConfig::cursor_acceleration_bias*;
      MirPointerConfig::handedness*;
      MirPointerConfig::horizontal_scroll_scale*;
      MirPointerConfig::operator*;
      MirPointerConfig::vertical_scroll_scale*;
      MirTouchpadConfig::?MirTouchpadConfig*;
      MirTouchpadConfig::MirTouchpadConfig*;
      MirTouchpadConfig::button_down_scroll_button*;
      MirTouchpadConfig::click_mode*;
      MirTouchpadConfig::disable_while_typing*;
      MirTouchpadConfig::disable_with_mouse*;
      MirTouchpadConfig::middle_mouse_button_emulation*;
      MirTouchpadConfig::operator*;
      MirTouchpadConfig::scroll_mode*;
      MirTouchpadConfig::tap_to_click*;
      MirTouchscreenConfig::?MirTouchscreenConfig*;
      MirTouchscreenConfig::MirTouchscreenConfig*;
      MirTouchscreenConfig::output_id*;
      MirTouchscreenConfig::mapping_mode*;
      MirTouchscreenConfig::operator*;
      mir::input::deserialize_input_config*;
      mir::input::serialize_input_config*;
      operator*;
      typeinfo?for?MirPointerConfig;
      typeinfo?for?MirTouchpadConfig;
      typeinfo?for?MirTouchscreenConfig;
      typeinfo?for?MirKeyboardConfig;
      typeinfo?for?MirInputConfig;
      typeinfo?for?MirInputDevice;
      MirEvent::to_close_window*;
      MirEvent::to_window_output*;
      MirEvent::to_window_placement*;
  };
} MIR_COMMON_0.25;

MIR_COMMON_0.27 {
 global:
  extern "C++" {
      MirInputDeviceStateEvent::set_window_id*;
      MirInputDeviceStateEvent::window_id*;
      MirInputEvent::set_window_id*;
      MirInputEvent::window_id*;
      MirKeyboardEvent::set_text*;
      MirKeyboardEvent::text*;
      MirPointerEvent::dnd_handle*;
      MirPointerEvent::set_dnd_handle*;
      MirSurfaceEvent::dnd_handle*;
      MirSurfaceEvent::set_dnd_handle*;
  };
} MIR_COMMON_0.26;

# When building with CMAKE_BUILD_TYPE=UBSanitize these are needed
MIR_COMMON_UBSAN {
 global:
  extern "C++" {
      typeinfo?for?mir::logging::SharedLibraryProberReport;
  };
} MIR_COMMON_0.26;
